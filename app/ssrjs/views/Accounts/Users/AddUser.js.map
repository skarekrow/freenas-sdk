{"version":3,"sources":["app/jsx/views/Accounts/Users/AddUser.jsx"],"names":[],"mappings":"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","file":"app/jsx/views/Accounts/Users/AddUser.jsx","sourcesContent":["// Add User Template\n// =================\n// Handles the process of adding a new user. Provides an interface for setting up\n// the configurable attributes of a new user.\n\n\"use strict\";\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\n\nimport UsersStore from \"../../../stores/UsersStore\";\nimport UsersMiddleware from \"../../../middleware/UsersMiddleware\";\n\nimport GroupsStore from \"../../../stores/GroupsStore\";\nimport GroupsMiddleware from \"../../../middleware/GroupsMiddleware\";\n\nimport inputHelpers from \"../../../components/mixins/inputHelpers\";\nimport userMixins from \"../../../components/mixins/userMixins\";\nimport groupMixins from \"../../../components/mixins/groupMixins\";\nimport viewerCommon from \"../../../components/mixins/viewerCommon\";\n\nconst AddUser = React.createClass({\n\n    mixins: [   inputHelpers\n              , userMixins\n              , groupMixins\n              , viewerCommon ]\n\n  , contextTypes: {\n      router: React.PropTypes.func\n  }\n\n  , propTypes: {\n        viewData: React.PropTypes.object.isRequired\n    }\n\n  , getInitialState: function () {\n      var defaultValues = { shell : \"/bin/csh\" };\n\n      var usersList = UsersStore.getAllUsers();\n\n      return {\n        // FIXME: locallyModifiedValues is magical. See handleValueChange and what\n        // it calls from inputHelpers.\n          locallyModifiedValues    : {}\n        , defaultValues            : defaultValues\n        , dataKeys                 : this.props.viewData.format.dataKeys\n        , pleaseCreatePrimaryGroup : true\n        , usersList                : usersList\n      };\n    }\n\n  , handleValueChange: function( key, event ) {\n      var value = this.refs[key].getValue();\n      var newLocallyModifiedValues = this.state.locallyModifiedValues;\n\n      var dataKey = _.find(this.state.dataKeys, function (dataKey) {\n        return (dataKey.key === key);\n      }, this);\n\n      newLocallyModifiedValues[ key ] = this.processFormInput( event, value, dataKey );\n\n      this.setState( { locallyModifiedValues: newLocallyModifiedValues } );\n    }\n\n    // Will return the first available UID above 1000 (to be used as a default).\n  , getNextUID: function () {\n      var users = {};\n\n      // Turn the array of users into an object for easier UID checking.\n      _.forEach( this.state.usersList, function ( user ) {\n        users[ user [ \"id\" ] ] = user;\n      });\n\n      var nextUID = 1000;\n\n      // loop until it finds a UID that's not in use\n      while( _.has( users, nextUID.toString() ) ){\n        nextUID++;\n      }\n\n      return nextUID;\n\n    }\n\n  , submitNewUser: function () {\n      var routing = this.props.viewData.routing;\n      var newUserValues = {};\n      var params        = {};\n\n      // Stage edited values for submission. Don't include any read-only stuff that got in somehow.\n      newUserValues = this.removeReadOnlyFields( this.state.locallyModifiedValues, this.state.dataKeys );\n\n      // Convert the array of strings provided by the form to an array of integers.\n      if( !_.isEmpty( newUserValues[ \"groups\" ] ) ){\n        newUserValues[ \"groups\" ] = this.parseGroupsArray( newUserValues[ \"groups\" ] );\n      }\n\n      // If the user requests a new group, make one with the next available GID and the username.\n      if (this.state.pleaseCreatePrimaryGroup) {\n        var newGID = this.getNextGID();\n        GroupsMiddleware.createGroup( {   id   : newGID\n                                        , name : newUserValues[ \"username\" ] } );\n        newUserValues[ \"group\" ] = newGID;\n      }\n\n      // Get ready to send the view to the new user.\n      params[ routing[ \"param\" ] ] = newUserValues[ \"username\" ];\n\n      // Submits the user and moves the view to the new user.\n      // TODO: Only submit a user if all the required fields are there.\n      // TODO: Make sure the new user was actually created before transitioning the route.\n      UsersMiddleware.createUser( newUserValues, this.context.router.transitionTo( routing[ \"route\" ], params) );\n  }\n\n  , cancel: function () {\n      this.context.router.transitionTo( \"users\" );\n    }\n\n  , primaryGroupToggle: function( event ) {\n      this.setState({\n        pleaseCreatePrimaryGroup : event.target.checked\n      });\n    }\n\n  , render: function () {\n\n      var addButtons =\n        <TWBS.ButtonToolbar>\n          <TWBS.Button className = \"pull-right\"\n                       onClick   = { this.cancel }\n                       bsStyle   = \"default\">{\"Cancel\"}</TWBS.Button>\n          <TWBS.Button className = \"pull-right\"\n                       disabled  = { _.isEmpty( this.state.locallyModifiedValues ) }\n                       onClick   = { this.submitNewUser}\n                       bsStyle   = \"info\">{\"Save New User\"}</TWBS.Button>\n        </TWBS.ButtonToolbar>;\n\n      var inputFields =\n        <form className = \"form-horizontal\">\n          <TWBS.Grid fluid>\n            {/*TODO: Style unedited default values differently from edited ones*/}\n            <TWBS.Row>\n              <TWBS.Col xs = {8}>\n                {/* User id */}\n                <TWBS.Input type             = \"text\"\n                            ref              = \"id\"\n                            label            = \"User ID\"\n                            defaultValue     = { this.getNextUID() }\n                            onChange         = { this.handleValueChange.bind( null, \"id\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"id\") && !_.isEmpty(this.state.locallyModifiedValues[\"id\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                {/* username */}\n                <TWBS.Input type             = \"text\"\n                            ref              = \"username\"\n                            label            = \"User Name\"\n                            onChange         = { this.handleValueChange.bind( null, \"username\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"username\") && !_.isEmpty(this.state.locallyModifiedValues[\"username\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\"\n                            required />\n                {/* Full Name */}\n                <TWBS.Input type             = \"text\"\n                            ref              = \"full_name\"\n                            label            = \"Full Name\"\n                            onChange         = { this.handleValueChange.bind( null, \"full_name\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"full_name\") && !_.isEmpty(this.state.locallyModifiedValues[\"full_name\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                {/* email */}\n                <TWBS.Input type             = \"text\"\n                            ref              = \"email\"\n                            label            = \"email\"\n                            onChange         = { this.handleValueChange.bind( null, \"email\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"email\") && !_.isEmpty(this.state.locallyModifiedValues[\"email\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                {/* shell */}\n                <TWBS.Input type             = \"select\"\n                            label            = \"Shell\"\n                            ref              = \"shell\"\n                            defaultValue     = { this.state.defaultValues[\"shell\"] }\n                            onChange         = { this.handleValueChange.bind( null, \"shell\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"shell\") && !_.isEmpty(this.state.locallyModifiedValues[\"shell\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" >\n                            { this.generateOptionsList( this.state.shells, \"name\" ) }\n                </TWBS.Input>\n                {/* primary group */}\n                {/* TODO: Recommend the default group based on the username. Requires creating a group at user-creation time.*/}\n                <TWBS.Input type             = \"checkbox\"\n                            label            = \"Automatically Create Primary Group\"\n                            ref              = \"createPrimaryGroup\"\n                            onChange         = { this.primaryGroupToggle }\n                            checked          = { this.state.pleaseCreatePrimaryGroup }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                <TWBS.Input type             = \"select\"\n                            label            = \"Select Primary Group\"\n                            ref              = \"group\"\n                            value            = { this.state.locallyModifiedValues[\"group\"]? this.state.locallyModifiedValues[\"group\"]: null }\n                            onChange         = { this.handleValueChange.bind( null, \"group\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"group\") && !_.isEmpty(this.state.locallyModifiedValues[\"group\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\"\n                            disabled         = { this.state.pleaseCreatePrimaryGroup } >\n                            { this.generateOptionsList( GroupsStore.getAllGroups(), \"id\", \"name\" ) }\n                </TWBS.Input>\n                {/* sshpubkey */}\n                <TWBS.Input type             = \"textarea\"\n                            ref              = \"sshpubkey\"\n                            label            = \"Public Key\"\n                            onChange         = { this.handleValueChange.bind( null, \"sshpubkey\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"sshpubkey\") && !_.isEmpty(this.state.locallyModifiedValues[\"sshpubkey\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\"\n                            rows             = \"10\" />\n                {/* Additional Groups */}\n                <TWBS.Input type             = \"select\"\n                            ref              = \"groups\"\n                            label            = \"Additional Groups\"\n                            onChange         = { this.handleValueChange.bind( null, \"groups\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"groups\") && !_.isEmpty(this.state.locallyModifiedValues[\"groups\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\"\n                            required\n                            multiple >\n                            { this.generateOptionsList( GroupsStore.getAllGroups(), \"id\", \"name\" ) }\n                </TWBS.Input>\n              </TWBS.Col>\n              <TWBS.Col xs = {4}>\n                {/* locked */}\n                <TWBS.Input type             = \"checkbox\"\n                            label            = \"Locked\"\n                            ref              = \"locked\"\n                            defaultChecked   = { false }\n                            onChange         = { this.handleValueChange.bind( null, \"locked\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"locked\") && !_.isEmpty(this.state.locallyModifiedValues[\"locked\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                {/* sudo */}\n                <TWBS.Input type             = \"checkbox\"\n                            label            = \"Sudo\"\n                            ref              = \"sudo\"\n                            defaultChecked   = { false }\n                            onChange         = { this.handleValueChange.bind( null, \"sudo\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"sudo\") && !_.isEmpty(this.state.locallyModifiedValues[\"sudo\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n                {/* password_disabled */}\n                <TWBS.Input type             = \"checkbox\"\n                            label            = \"Password Disabled\"\n                            ref              = \"password_disabled\"\n                            defaultChecked   = { false }\n                            onChange         = { this.handleValueChange.bind( null, \"password_disabled\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"password_disabled\") && !_.isEmpty(this.state.locallyModifiedValues[\"password_disabled\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n              </TWBS.Col>\n            </TWBS.Row>\n          </TWBS.Grid>\n        </form>;\n\n\n      return (\n        <div className=\"viewer-item-info\">\n          <TWBS.Grid fluid>\n            { addButtons }\n            { inputFields }\n          </TWBS.Grid>\n        </div>\n      );\n    }\n});\n\nexport default AddUser;\n"]}