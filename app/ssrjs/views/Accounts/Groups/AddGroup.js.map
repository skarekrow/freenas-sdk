{"version":3,"sources":["app/jsx/views/Accounts/Groups/AddGroup.jsx"],"names":[],"mappings":"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","file":"app/jsx/views/Accounts/Groups/AddGroup.jsx","sourcesContent":["// Add Group Template\n// ==================\n// Handles the process of adding a new group.\n\n\"use strict\";\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\n\nimport GroupsStore from \"../../../stores/GroupsStore\";\nimport GroupsMiddleware from \"../../../middleware/GroupsMiddleware\";\n\nimport inputHelpers from \"../../../components/mixins/inputHelpers\";\nimport groupMixins from \"../../../components/mixins/groupMixins\";\n\nconst AddGroup = React.createClass({\n\n    mixins: [   inputHelpers\n              , groupMixins ]\n\n  , contextTypes: {\n      router: React.PropTypes.func\n    }\n\n  , propTypes: {\n      viewData: React.PropTypes.object.isRequired\n    }\n\n  , getInitialState: function () {\n\n      var groupsList = GroupsStore.getAllGroups();\n\n      return {\n          locallyModifiedValues : {}\n        , dataKeys   : this.props.viewData.format.dataKeys\n        , groupsList : groupsList\n      };\n    }\n\n  , handleValueChange: function( key, event ) {\n      var value = this.refs[key].getValue();\n      var newLocallyModified = this.state.locallyModifiedValues;\n\n      var dataKey = _.find(this.state.dataKeys, function( dataKey ) {\n        return (dataKey.key === key);\n      });\n\n      newLocallyModified[ key ] = this.processFormInput( event, value, dataKey );\n\n      this.setState( { locallyModifiedValues: newLocallyModified } );\n    }\n\n  , submitNewGroup: function () {\n      var routing = this.props.viewData.routing;\n      var newGroupValues = {};\n      var params         = {};\n\n      // Stage values for submission. Read-only values are not allowed.\n      newGroupValues = this.removeReadOnlyFields( this.state.locallyModifiedValues, this.state.dataKeys );\n\n      // Set up to forward the view to the created group.\n      params[ routing[ \"param\" ] ] = newGroupValues[ \"name\" ];\n\n      // Submit the new group and redirect the view to it.\n      // TODO: Does this need additional input validation?\n      // TODO: Only redirect if the group was actually created.\n      GroupsMiddleware.createGroup( newGroupValues, this.context.router.transitionTo( routing[ \"route\" ], params) );\n\n    }\n\n    // TODO: There is probably room to genericize this into a mixin.\n  , cancel: function () {\n      this.context.router.transitionTo( \"groups\" );\n    }\n\n  , render: function () {\n      var addButtons =\n        <TWBS.ButtonToolbar>\n          <TWBS.Button className = \"pull-right\"\n                       onClick   = { this.cancel }\n                       bsStyle   = \"default\">{\"Cancel\"}</TWBS.Button>\n          <TWBS.Button className = \"pull-right\"\n                       disabled  = { _.isEmpty( this.state.locallyModifiedValues ) }\n                       onClick   = { this.submitNewGroup}\n                       bsStyle   = \"info\">{\"Save New Group\"}</TWBS.Button>\n        </TWBS.ButtonToolbar>;\n\n      var inputFields =\n        <form className = \"form-horizontal\">\n          <TWBS.Grid fluid>\n            <TWBS.Row>\n              <TWBS.Col xs = {4}>\n                {/* Group id */}\n                <TWBS.Input type             = \"text\"\n                            label            = \"Group ID\"\n                            ref              = \"id\"\n                            value            = { this.state.locallyModifiedValues[\"id\"]? this.state.locallyModifiedValues[\"id\"]: this.getNextGID() }\n                            onChange         = { this.handleValueChange.bind( null, \"id\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"id\") && !_.isEmpty(this.state.locallyModifiedValues[\"id\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\" />\n              </TWBS.Col>\n              <TWBS.Col xs = {8}>\n                {/* username */}\n                <TWBS.Input type             = \"text\"\n                            label            = \"Group Name\"\n                            ref              = \"name\"\n                            value            = { this.state.locallyModifiedValues[\"name\"]? this.state.locallyModifiedValues[\"name\"]: null }\n                            onChange         = { this.handleValueChange.bind( null, \"name\" ) }\n                            groupClassName   = { _.has(this.state.locallyModifiedValues, \"name\") && !_.isEmpty(this.state.locallyModifiedValues[\"name\"]) ? \"editor-was-modified\" : \"\"  }\n                            labelClassName   = \"col-xs-4\"\n                            wrapperClassName = \"col-xs-8\"\n                            required />\n              </TWBS.Col>\n            </TWBS.Row>\n          </TWBS.Grid>\n        </form>;\n\n\n      return (\n        <div className=\"viewer-item-info\">\n          <TWBS.Grid fluid>\n            { addButtons }\n            { inputFields }\n          </TWBS.Grid>\n        </div>\n      );\n    }\n});\n\nexport default AddGroup;\n"]}