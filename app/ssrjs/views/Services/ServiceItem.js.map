{"version":3,"sources":["app/jsx/views/Services/ServiceItem.jsx"],"names":[],"mappings":"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","file":"app/jsx/views/Services/ServiceItem.jsx","sourcesContent":["// Service Item Template\n// =====================\n\n\"use strict\";\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\n\nimport routerShim from \"../../components/mixins/routerShim\";\nimport clientStatus from \"../../components/mixins/clientStatus\";\n\nimport viewerUtil from \"../../components/Viewer/viewerUtil\";\n\nimport ServicesMiddleware from \"../../middleware/ServicesMiddleware\";\nimport ServicesStore from \"../../stores/ServicesStore\";\n\nimport ToggleSwitch from \"../../components/common/ToggleSwitch\";\n\nconst ServiceView = React.createClass({\n\n  propTypes: {\n    item: React.PropTypes.object.isRequired\n  }\n\n  , getInitialState: function () {\n      return { serviceState: ( this.props.item.state === \"running\"\n                                                      ? true\n                                                      : false ) };\n    }\n\n  , configureService: function ( action, command ) {\n\n    switch ( action ) {\n      // Start stop\n      case 1:\n        ServicesMiddleware.configureService( this.props.item.name\n                                           , { enable: command } );\n      break;\n\n      // Start stop once\n      case 2:\n        ServicesMiddleware.updateService( this.props.item.name\n                                           , command );\n      break;\n\n\n\n      ServicesMiddleware.updateService( serviceName, action );\n    }\n  }\n\n  , render: function () {\n\n    var pid = null;\n\n    if ( this.props.item[\"pid\"]\n         && typeof this.props.item[\"pid\"]\n         === \"number\" ) {\n      pid = <h4 className=\"text-muted\">\n              { viewerUtil.writeString( \"PID: \" + this.props.item[\"pid\"]\n                                        , \"\\u200B\" ) }\n            </h4>;\n    }\n\n    return (\n      <div className=\"viewer-item-info\">\n        <TWBS.Grid fluid>\n\n        {/* General information */}\n        <TWBS.Row>\n          <TWBS.Col xs={3}\n                    className=\"text-center\">\n            <viewerUtil.ItemIcon primaryString  = { this.props.item[\"name\"] }\n                                 fallbackString = { this.props.item[\"name\"] } />\n          </TWBS.Col>\n          <TWBS.Col xs={9}>\n            <h3>{ this.props.item[\"name\"] }</h3>\n            <h4 className=\"text-muted\">\n              { viewerUtil.writeString( this.props.item[\"state\"], \"\\u200B\" ) }\n            </h4>\n\n            { pid }\n\n            <hr />\n            <TWBS.ButtonToolbar>\n              <TWBS.SplitButton title   = { \"Enable\" }\n                                bsStyle = { \"success\" }\n                                key     = { \"1\" }\n                                onClick = { this.configureService.bind( null, 1\n                                            , true ) } >\n                <TWBS.MenuItem eventKey=\"1\"\n                               onClick = { this.configureService\n                                           .bind( null, 2, \"start\" ) }>\n                  { \"Enable once\" }\n                </TWBS.MenuItem>\n                <TWBS.MenuItem eventKey=\"2\">\n                  { \"Enable after reboot\" }\n                </TWBS.MenuItem>\n              </TWBS.SplitButton>\n              <TWBS.SplitButton title   = { \"Disable\" }\n                                bsStyle = { \"danger\" }\n                                key     = { \"2\" }\n                                onClick = { this.configureService\n                                            .bind( null, 1, false ) } >\n                <TWBS.MenuItem eventKey=\"1\"\n                               onClick = { this.configureService\n                                           .bind( null, 2, \"stop\" ) }>\n                  { \"Disable once\" }\n                </TWBS.MenuItem>\n                <TWBS.MenuItem eventKey=\"2\">\n                  { \"Disable after reboot\" }\n                </TWBS.MenuItem>\n                <TWBS.MenuItem eventKey=\"3\">\n                  { \"Disconnect current users\" }\n                </TWBS.MenuItem>\n                </TWBS.SplitButton>\n            </TWBS.ButtonToolbar>\n\n          </TWBS.Col>\n        </TWBS.Row>\n\n        </TWBS.Grid>\n      </div>\n    );\n  }\n\n});\n\nconst ServiceItem = React.createClass({\n\n  propTypes: {\n    viewData : React.PropTypes.object.isRequired\n  }\n\n  , mixins: [ routerShim, clientStatus ]\n\n  , getInitialState: function () {\n      return {\n        targetService : this.getServiceFromStore()\n        , currentMode   : \"view\"\n        , activeRoute   : this.getDynamicRoute()\n      };\n    }\n\n  , componentDidUpdate: function ( prevProps, prevState ) {\n      var activeRoute = this.getDynamicRoute();\n\n      if ( activeRoute !== prevState.activeRoute ) {\n        this.setState({\n          targetService : this.getServiceFromStore()\n          , currentMode   : \"view\"\n          , activeRoute   : activeRoute\n        });\n      }\n    }\n\n  , componentDidMount: function () {\n      ServicesStore.addChangeListener( this.updateServiceTarget );\n    }\n\n  , componentWillUnmount: function () {\n      ServicesStore.removeChangeListener( this.updateServiceTarget );\n    }\n\n  , getServiceFromStore: function () {\n      return ServicesStore\n             .findServiceByKeyValue( this.props.viewData.format[\"selectionKey\"]\n                                     , this.getDynamicRoute() );\n    }\n\n  , updateServiceTarget: function () {\n      this.setState({ targetService: this.getServiceFromStore() });\n    }\n\n  , render: function () {\n      var DisplayComponent = null;\n\n      if ( this.state.SESSION_AUTHENTICATED && this.state.targetService ) {\n\n        // DISPLAY COMPONENT\n        var childProps = {\n          handleViewChange : this.handleViewChange\n          , item             : this.state.targetService\n          , viewData         : this.props.viewData\n        };\n\n        switch ( this.state.currentMode ) {\n          default:\n          case \"view\":\n            DisplayComponent = <ServiceView { ...childProps } />;\n          break;\n\n          case \"edit\":\n            // TODO\n          break;\n        }\n\n      }\n\n      return (\n        <div className=\"viewer-item-info\">\n\n          { DisplayComponent }\n\n        </div>\n      );\n    }\n\n});\n\nexport default ServiceItem;\n"]}