{"version":3,"sources":["app/jsx/views/Network/NetworkConfig.jsx"],"names":[],"mappings":"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","file":"app/jsx/views/Network/NetworkConfig.jsx","sourcesContent":["// Network Configuration Overview\n// ==============================\n\n\"use strict\";\n\nvar componentLongName = \"NetworkConfig\"\n\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\"\nimport _ from \"lodash\";\n\nimport NetworkConfigMiddleware from \"../../middleware/NetworkConfigMiddleware\";\nimport NetworkConfigStore from \"../../stores/NetworkConfigStore\";\n\nimport Icon from \"../../components/Icon\";\n\nconst NetworkConfig = React.createClass({\n\n  getInitialState: function () {\n    return this.getNetworkConfigFromStore();\n  }\n\n  , componentDidMount: function () {\n    NetworkConfigStore.addChangeListener( this.handleConfigChange );\n    NetworkConfigMiddleware.requestNetworkConfig();\n    NetworkConfigMiddleware.subscribe( componentLongName );\n  }\n\n  , componentWillUnmount: function () {\n    NetworkConfigStore.removeChangeListener( this.handleConfigChange );\n    NetworkConfigMiddleware.unsubscribe( componentLongName );\n  }\n\n  , getNetworkConfigFromStore: function () {\n    return { networkConfig: NetworkConfigStore.getNetworkConfig() };\n  }\n\n  , handleConfigChange: function () {\n    this.setState( this.getNetworkConfigFromStore() );\n  }\n\n  , render: function () {\n    let dhcpGatewayIcon = \"\";\n    let dhcpDNSIcon = \"\";\n    let gatewayIPv4 = \"\";\n    let gatewayIPv6 = \"\";\n\n    if ( !_.isEmpty( this.state.networkConfig ) ) {\n      dhcpGatewayIcon = this.state.networkConfig.dhcp[\"assign_gateway\"]\n                      ? \"check text-primary\"\n                      : \"times text-muted\";\n\n      dhcpDNSIcon = this.state.networkConfig.dhcp[\"assign_dns\"]\n                  ? \"check text-primary\"\n                  : \"times text-muted\";\n\n      gatewayIPv4 = this.state.networkConfig.gateway.ipv4\n              ? this.state.gateway.ipv4\n              : \"--\";\n\n      gatewayIPv6 = this.state.networkConfig.gateway.ipv6\n              ? this.state.networkConfig.gateway.ipv6\n              : \"--\";\n    }\n\n    return (\n      <main>\n        <div className = \"network-config container-fluid\">\n          <TWBS.PanelGroup>\n            <TWBS.Panel>\n              { \"DHCP\" }\n              <TWBS.ListGroup fill >\n                <TWBS.ListGroupItem className = \"network-attribute\">\n                  { \"Assign DNS \"}\n                  <Icon glyph = { dhcpDNSIcon } />\n                </TWBS.ListGroupItem>\n                <TWBS.ListGroupItem className = \"network-attribute\">\n                  { \"Assign Gateway \"}\n                  <Icon glyph = { dhcpGatewayIcon } />\n                </TWBS.ListGroupItem>\n              </TWBS.ListGroup>\n            </TWBS.Panel>\n            <TWBS.Panel>\n              { \"Default Gateways\" }\n              <TWBS.ListGroup fill >\n                <TWBS.ListGroupItem className = \"network-attribute\">\n                  { \"IPv4 Default Gateway: \"}\n                  { gatewayIPv4 }\n                </TWBS.ListGroupItem>\n                <TWBS.ListGroupItem className = \"network-attribute\">\n                  { \"IPv6 Default Gateway: \"}\n                  { gatewayIPv6 }\n                </TWBS.ListGroupItem>\n              </TWBS.ListGroup>\n            </TWBS.Panel>\n          </TWBS.PanelGroup>\n        </div>\n      </main> )\n  }\n\n});\n\nexport default NetworkConfig;\n"]}