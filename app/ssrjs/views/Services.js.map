{"version":3,"sources":["app/jsx/views/Services.jsx"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;qBAEK,OAAO;;;;gCAEN,sBAAsB;;;;4CAEV,kCAAkC;;;;mCACvC,yBAAyB;;;;AAEnD,IAAI,QAAQ,GAAG;AACb,QAAM,EAAM,OAAO,CAAE,kDAAkD,CAAE,CAAC,CAAC,CAAC;AAC1E,SAAO,EAAG;AACV,SAAK,EAAO,iBAAiB;AAC3B,SAAK,EAAK,WAAW;GACxB;AACC,SAAO,EAAE;AACT,kBAAc,EAAE;AACd,aAAO,EAAE;AACH,YAAI,EAAU,iBAAiB;AAC7B,gBAAQ,EAAI,EAAE,KAAK,EAAE,SAAS,EAAE;OACnC;AACH,aAAO,EAAE;AACT,YAAI,EAAU,kBAAkB;AAC9B,gBAAQ,EAAI,EAAE,KAAK,EAAE,SAAS,EAAE;OACnC;KACF;AACC,iBAAa,EAAM,gBAAgB;AACnC,iBAAa,EAAM,cAAc;AACjC,kBAAc,EAAK,EAAG;AACtB,kBAAc,EAAK,EAAG;AACtB,iBAAa,EAAM,CAAE,SAAS,EAAE,SAAS,CAAE;AAC3C,iBAAa,EAAM,CAAE,SAAS,EAAE,SAAS,CAAE;AAC3C,oBAAgB,EAAG,IAAI;AACvB,gBAAY,EAAO,YAAY;GAClC;CACF,CAAC;;AAEF,SAAS,oBAAoB,GAAI;AAC/B,SAAO;AACL,gBAAY,EAAE,iCAAc,cAAc,EAAE;GAC7C,CAAC;CACH;;AAED,SAAS,YAAY,CAAG,UAAU,EAAE,OAAO,EAAG;AACxC,MAAI,WAAW,GAAK,UAAU,CAAC,IAAI,CAAC;AACpC,MAAI,YAAY,GAAI,UAAU,CAAC,KAAK,CAAC;;AAErC,MAAI,MAAM,GAAK,YAAY,KAAK,SAAS,GAAG,MAAM,GAAG,OAAO,AAAE,CAAC;;AAE/D,4CAAmB,aAAa,CAAE,WAAW,EAAE,MAAM,CAAE,CAAC;;;CAGzD;;AAGL,IAAM,QAAQ,GAAG,mBAAM,WAAW,CAAC;;;AAEjC,iBAAe,EAAE,2BAAY;AACzB,WAAO,oBAAoB,EAAE,CAAC;GAC/B;;AAED,mBAAiB,EAAE,6BAAY;AAC7B,8CAAmB,mBAAmB,EAAE,CAAC;AACzC,8CAAmB,eAAe,CAAE,iBAAiB,CAAE,CAAC;;AAExD,qCAAc,iBAAiB,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;GAC9D;;AAED,sBAAoB,EAAE,gCAAY;AAChC,8CAAmB,mBAAmB,CAAE,iBAAiB,CAAE,CAAC;AAC5D,qCAAc,oBAAoB,CAAE,IAAI,CAAC,oBAAoB,CAAE,CAAC;GACjE;;AAED,sBAAoB,EAAE,gCAAY;AAChC,QAAI,CAAC,QAAQ,CAAE,oBAAoB,EAAE,CAAE,CAAC;GACzC;;AAED,QAAM,EAAE,kBAAY;AACpB,WACE;;;MACE;;;;OAAiB;MACjB,kEAAQ,MAAM,EAAU,UAAU,AAAE;AAC5B,iBAAS,EAAO,IAAI,CAAC,KAAK,CAAC,YAAY,AAAE;AACzC,gBAAQ,EAAQ,QAAQ,AAAE,GAAG;KAChC,CACP;GACH;CACF,CAAC,CAAC;;qBAEY,QAAQ","file":"app/jsx/views/Services.jsx","sourcesContent":["// Services\n// =======\n//\n\n\"use strict\";\n\nimport React from \"react\";\n\nimport Viewer from \"../components/Viewer\";\n\nimport ServicesMiddleware from \"../middleware/ServicesMiddleware\";\nimport ServicesStore from \"../stores/ServicesStore\";\n\nvar viewData = {\n  format    : require( \"../../data/middleware-keys/services-display.json\" )[0]\n  , routing : {\n    route     : \"services-editor\"\n    , param   : \"serviceID\"\n  }\n  , display: {\n    filterCriteria: {\n      running: {\n            name        : \"active services\"\n            , testProp  : { state: \"running\" }\n          }\n      , stopped: {\n        name        : \"stopped services\"\n        , testProp  : { state: \"stopped\" }\n      }\n    }\n    , remainingName    : \"other services\"\n    , ungroupedName    : \"all services\"\n    , allowedFilters   : [ ]\n    , defaultFilters   : [ ]\n    , allowedGroups    : [ \"running\", \"stopped\" ]\n    , defaultGroups    : [ \"running\", \"stopped\" ]\n    , showToggleSwitch : true\n    , handleToggle     : handleToggle\n  }\n};\n\nfunction getServicesFromStore () {\n  return {\n    servicesList: ServicesStore.getAllServices()\n  };\n}\n\nfunction handleToggle ( serviceObj, toggled ) {\n      var serviceName   = serviceObj.name;\n      var serviceState  = serviceObj.state;\n\n      var action = ( serviceState === \"running\" ? \"stop\" : \"start\" );\n\n      ServicesMiddleware.updateService( serviceName, action );\n\n      // TODO: Select the service with changing state.\n    }\n\n\nconst Services = React.createClass({\n\n  getInitialState: function () {\n      return getServicesFromStore();\n    }\n\n  , componentDidMount: function () {\n      ServicesMiddleware.requestServicesList();\n      ServicesMiddleware.subscribeToTask( \"Services Viewer\" );\n\n      ServicesStore.addChangeListener( this.handleServicesChange );\n    }\n\n  , componentWillUnmount: function () {\n      ServicesMiddleware.unsubscribeFromTask( \"Services Viewer\" );\n      ServicesStore.removeChangeListener( this.handleServicesChange );\n    }\n\n  , handleServicesChange: function () {\n      this.setState( getServicesFromStore() );\n    }\n\n  , render: function () {\n    return (\n      <main>\n        <h2>Services</h2>\n        <Viewer header      = { \"Services\" }\n                inputData   = { this.state.servicesList }\n                viewData    = { viewData } />\n      </main>\n    );\n  }\n});\n\nexport default Services;\n"]}