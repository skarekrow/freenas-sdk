{"version":3,"sources":["app/jsx/components/BusyBox.jsx"],"names":[],"mappings":"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","file":"app/jsx/components/BusyBox.jsx","sourcesContent":["// Busy Box\n// =========\n// Just a Busy Spinner for Restarts and Shutdowns\n\n\"use strict\";\n\nvar componentLongName = \"BusyBox\";\n\nimport React from \"react\";\n\n// Middleware\nimport MiddlewareClient from \"../middleware/MiddlewareClient\";\n\n// Middleware Store (this is needed for reconnection interval)\nimport MiddlewareStore from \"../stores/MiddlewareStore\"\n\n// SessionStore stores the logged in user and the fact that login happened.\nimport SessionStore from \"../stores/SessionStore\";\n\n// PowerStore\nimport PowerStore from \"../stores/PowerStore\";\n\n// Power Middleware\nimport PowerMiddleware from \"../middleware/PowerMiddleware\";\n\n// Throbber\nimport Throbber from \"./common/Throbber\";\n\n// Twitter Bootstrap React components\nimport TWBS from \"react-bootstrap\";\n\nvar BusyBox = React.createClass(\n\n  { propTypes: { animDuration : React.PropTypes.number\n               , animDelay    : React.PropTypes.number\n    }\n\n  , getDefaultProps: function () {\n      return { animDuration : 500\n             , animDelay    : 0\n      };\n    }\n\n  , getInitialState: function () {\n      return { boxIsVisible  : false\n             , userText      : \"\"\n             , passText      : \"\"\n             , busyText      : \"Busy\"\n             , kickin        : false\n             , loggedIn      : SessionStore.getLoginStatus()\n             , operation     : \"Connect you to FreeNAS\"\n             , reconnetTime  : 0\n             , sockState     : false\n      };\n    }\n\n  , componentDidMount: function () {\n      SessionStore.addChangeListener( this.handleSessionChange );\n      PowerStore.addChangeListener( this.handlePowerChange );\n      MiddlewareStore.addChangeListener( this.handleMiddlewareChange );\n      PowerMiddleware.subscribe( componentLongName );\n      // this.updateBoxVisibility();\n      // TODO: do we need the above?\n    }\n\n  , componentWillUnmount: function () {\n      PowerStore.removeChangeListener( this.handlePowerChange );\n      SessionStore.removeChangeListener( this.handleSessionChange );\n      MiddlewareStore.removeChangeListener( this.handleMiddlewareChange );\n      PowerMiddleware.unsubscribe( componentLongName );\n    }\n\n  , componentDidUpdate: function ( prevProps, prevState ) {\n      if ( prevState.kickin !== this.state.kickin ||\n           prevState.loggedIn !== this.state.loggedIn ||\n           prevState.sockState !== this.state.sockState ) {\n        this.updateBoxVisibility();\n      }\n    }\n\n  , updateBoxVisibility: function () {\n      if ( this.state.kickin ||\n           !this.state.loggedIn ||\n           !this.state.sockState ) {\n        if ( !this.state.boxIsVisible ) { this.showBusyBox(); };\n      } else {\n        if ( this.state.boxIsVisible ) { this.showBusyBox(); };\n      }\n    }\n\n  , showBusyBox: function () {\n      this.setState({ boxIsVisible: true });\n      // clear the cached password!\n      this.setState({ passText: \"\" });\n      Velocity( React.findDOMNode( this.refs.Busy )\n             , \"fadeIn\"\n             , { duration: this.props.animDuration } );\n    }\n\n  , hideBusyBox: function () {\n      this.setState({ boxIsVisible: false });\n      Velocity( React.findDOMNode( this.refs.Busy )\n             , \"fadeOut\"\n             , { duration : this.props.animDuration\n               , delay    : this.props.animDelay }\n             );\n\n      this.animTimeout = setTimeout( function ( ) {\n         this.setState({ boxIsVisible: false });\n       }.bind( this )\n       , this.props.animDuration + this.props.animDelay + 250\n      );\n    }\n\n  , handleSessionChange: function () {\n      this.setState({ loggedIn: SessionStore.getLoginStatus() });\n    }\n\n  , handlePowerChange: function () {\n      let retcode = PowerStore.isEventPending();\n      this.setState({ kickin    : retcode[0]\n                    , operation : retcode[1]\n      });\n    }\n\n  , handleMiddlewareChange: function () {\n      let retcode = MiddlewareStore.getSockState();\n      this.setState({ sockState     : retcode[0]\n                    , reconnetTime  : Math.round( retcode[1] / 1000 )\n      })\n    }\n\n  , handleUserChange: function ( event ) {\n      this.setState({ userText: event.target.value });\n    }\n\n  , handlePassChange: function ( event ) {\n      this.setState({ passText: event.target.value });\n    }\n\n  , handleKeydown: function ( event ) {\n      if ( event.which === 13 && this.state.userText.length ) {\n        this.handleLoginClick();\n      }\n    }\n\n  , handleLoginClick: function ( event ) {\n      // TODO: Input validation for user/pass. What are the rules?\n      MiddlewareClient.login( \"userpass\"\n                            , [ this.state.userText\n                              , this.state.passText ] );\n    }\n\n  , render: function () {\n      var busyBody = ( <div ref=\"Busy\"  style={{ opacity: 0 }}/> );\n\n      if ( this.state.boxIsVisible ) {\n        if ( !this.state.sockState || this.state.kickin ) {\n          let throbberprops     = {};\n          throbberprops.bsStyle = \"primary\";\n          throbberprops.size    = 60;\n          let dispMsg           = (\n            <h2>{ \"Please wait while I \" + this.state.operation }</h2>\n          );\n          if ( !this.state.sockState ) {\n            dispMsg = (\n              <span>\n                <h2>{ \"Reconnection you to FreeNAS in \"\n                      + this.state.reconnetTime\n                      + \" seconds\" }\n                </h2>\n                <TWBS.Button block bsStyle=\"info\"\n                             onClick = {\n                               MiddlewareClient.reconnectHandle.reconnectNow.bind( MiddlewareClient.reconnectHandle ) }>\n                  {\"Reconnect Now\"}\n                </TWBS.Button>\n                <br />\n              </span>\n            );\n\n          }\n\n          busyBody = (\n            <div className=\"overlay-dark\" ref=\"Busy\" style={{ opacity: 0 }}>\n              <div className=\"overlay-window\">\n                <div>\n                  { dispMsg }\n                  <Throbber {...throbberprops} />\n                </div>\n              </div>\n            </div>\n          );\n        } else if ( !this.state.loggedIn ) {\n          busyBody = (\n            <div className=\"overlay-dark\" ref=\"Busy\" style={{ opacity: 0 }}>\n              <div className=\"overlay-window\">\n\n                <h3>{\"Welcome to FreeNAS 10\"}</h3>\n                <hr />\n\n                <div className=\"form-group\">\n                  <input className   = \"form-control\"\n                         type        = \"text\"\n                         value       = { this.state.userText }\n                         onChange    = { this.handleUserChange }\n                         onKeyDown   = { this.handleKeydown }\n                         placeholder = \"Username\" />\n                </div>\n                <div className=\"form-group\">\n                  <input className   = \"form-control\"\n                         type        = \"password\"\n                         value       = { this.state.passText }\n                         onChange    = { this.handlePassChange }\n                         onKeyDown   = { this.handleKeydown }\n                         placeholder = \"Password\" />\n                </div>\n\n                <TWBS.Button block bsStyle=\"info\"\n                             disabled = { this.state.userText.length ?\n                                            false : true }\n                             onClick  = { this.handleLoginClick }>{\"Sign In\"}\n                </TWBS.Button>\n              </div>\n            </div>\n          );\n        }\n      }\n\n      return busyBody;\n    }\n\n  }\n);\n\nmodule.exports = BusyBox;\n"]}