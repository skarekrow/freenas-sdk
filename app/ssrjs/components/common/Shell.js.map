{"version":3,"sources":["app/jsx/components/common/Shell.jsx"],"names":[],"mappings":"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","file":"app/jsx/components/common/Shell.jsx","sourcesContent":["// SHELL\n// =====\n// Common-use React component wrapping the various different shells that FreeNAS\n// supports. Handles its own lifecycle and does not rely on a Flux store. Since\n// it relies on single-use authentication tokens and has no persistent data,\n// there is no need for the standard data flow model.\n\n\"use strict\";\n\nimport React from \"react\";\nimport Terminal from \"term.js\";\n\nimport ShellMiddleware from \"../../middleware/ShellMiddleware\";\n\nvar Shell = React.createClass(\n  {  ws             : null\n  , term            : null\n  , isAuthenticated : false\n\n  , propTypes: {\n      shellType: React.PropTypes.string\n    }\n\n  , getDefaultProps: function () {\n      return {\n        shellType: \"/bin/sh\"\n      };\n    }\n\n  , componentDidMount: function () {\n      ShellMiddleware.spawnShell( this.props.shellType, this.createNewShell );\n    }\n\n  , componentDidUpdate: function ( prevProps, prevState ) {\n      if ( this.props.shellType !== prevProps.shellType ) {\n        this.ws.close();\n        this.term.destroy();\n        this.isAuthenticated = false;\n        ShellMiddleware.spawnShell( this.props.shellType, this.createNewShell );\n      }\n      if ( this.refs.termTarget.getDOMNode().clientHeight !== 0 ) {\n        this.term.resize( 80\n                        , this.refs.termTarget.getDOMNode().clientHeight * 0.05 );\n      }\n    }\n\n  , createNewShell: function ( token ) {\n      var url = window.location.protocol === \"https:\" ? \"wss://\" : \"ws://\"\n              + document.domain + \":5000/shell\";\n\n      this.ws   = new WebSocket( url );\n      this.term = new Terminal({ cols       : 80\n                               , rows       : 14\n                               , screenKeys : true\n      });\n\n      this.ws.onopen = function ( event ) {\n        this.ws.send( JSON.stringify({ token: token }) );\n      }.bind( this );\n\n      this.ws.onmessage = function ( event ) {\n        if ( !this.isAuthenticated ) {\n          if ( JSON.parse( event.data )[\"status\"] === \"ok\" ) {\n            this.isAuthenticated = true;\n          }\n\n          return;\n        }\n\n        this.term.write( event.data );\n      }.bind( this );\n\n      this.term.on( \"data\", function ( data ) {\n        this.ws.send( data );\n      }.bind( this ) );\n\n      this.term.open( this.refs.termTarget.getDOMNode() );\n    }\n\n  , render: function () {\n      return (\n        <div className=\"termFlex\" ref=\"termTarget\" />\n      );\n    }\n\n  }\n);\n\nmodule.exports = Shell;\n"]}