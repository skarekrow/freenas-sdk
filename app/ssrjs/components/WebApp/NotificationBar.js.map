{"version":3,"sources":["app/jsx/components/WebApp/NotificationBar.jsx"],"names":[],"mappings":"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","file":"app/jsx/components/WebApp/NotificationBar.jsx","sourcesContent":["// Notification Bar\n// ================\n// Part of the main webapp's window chrome. Positioned at the top of the page,\n// this bar details the alerts, events, and tasks that represent the current\n// state of the system\n\n\"use strict\";\n\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\n\nimport Icon from \"../Icon\";\nimport MiddlewareClient from \"../../middleware/MiddlewareClient\";\n\n\nvar LogQueue = React.createClass({\n\n    propTypes: {\n        glyph     : React.PropTypes.string.isRequired\n      , className : React.PropTypes.string\n      , active    : React.PropTypes.array\n      , log       : React.PropTypes.array\n    }\n\n  , handleToggleClick: function ( event ) {\n      if ( this.props.visible === false ) {\n        event.stopPropagation();\n        this.props.requestVisibility();\n      }\n    }\n\n  , handleNullClick: function ( event ) {\n      event.stopPropagation();\n    }\n\n  , createLogItem: function ( rawItem, index ) {\n\n      var statusDisplay;\n\n      switch( rawItem.status ) {\n        case \"in-progress\":\n          statusDisplay = <TWBS.ProgressBar bsStyle=\"info\" now={ rawItem.progress }  label=\"%(percent)s%\"/>;\n          break;\n\n        case \"pending\":\n          statusDisplay = <TWBS.ProgressBar active bsStyle=\"info\" now={ 100 } />;\n          break;\n\n        case \"warning\":\n        case \"info\":\n        case \"done\":\n          statusDisplay = <span>{ rawItem.details }</span>;\n          break;\n\n        default:\n          // Do nothing\n          statusDisplay = <span></span>;\n          break;\n      }\n\n      return (\n        <div key       = { index }\n             className = \"item\">\n          <h4>{ rawItem.description }</h4>\n          <div className = \"details\">{ rawItem.details }</div>\n          <div className = \"info\">{ rawItem.info }</div>\n          <div className=\"status\">\n            { statusDisplay }\n          </div>\n\n\n\n        </div>\n      );\n    }\n\n  , render: function () {\n      var activeSection = null;\n      var logSection    = null;\n\n      if ( this.props.active.length ) {\n        activeSection = <span>\n                          <h4>ACTIVE</h4>\n                          { this.props.active.map( this.createLogItem ) }\n                        </span>;\n      }\n      if ( this.props.log.length ) {\n        logSection = <span>\n                       <h4>LOG</h4>\n                       { this.props.log.map( this.createLogItem ) }\n                     </span>;\n      }\n\n      return (\n        <div className = \"notification-bar-icon\"\n             onClick   = { this.handleToggleClick } >\n\n          <Icon glyph        = { this.props.glyph }\n                icoSize      = \"3x\"\n                badgeContent = { this.props.active.length }/>\n\n          <div className = {[\"notification-box\"\n                            , this.props.className\n                            , this.props.visible ? \"visible\" : \"hidden\"\n                            ].join(\" \") }\n               onClick   = { this.handleNullClick }>\n          <div className = \"notification-box-header\">\n               <span>You have <strong>{ this.props.active.length } new </strong> events </span>\n               <a className = \"right\" href=\"#\">View all</a>\n          </div>\n\n            { activeSection }\n            { logSection }\n\n          </div>\n        </div>\n      );\n    }\n\n});\n\nvar NotificationBar = React.createClass({\n\n    getInitialState: function () {\n      return {\n          visibleLog: \"\"\n\n        // TODO: Replace dummy data with Middleware data in a Flux store\n        , active: {\n            alerts: [\n              {\n                description : <span>Reading Error at position 456 in pool <strong>HONK1</strong></span>\n              , status      : \"warning\"\n              , details     : \"Error code #1234 Details about this error\"\n              },{\n                description : <span>Reading Error at position 123 in pool <strong>HONK1</strong></span>\n              , status      : \"warning\"\n              , details     : \"Error code #1234 Details about this error\"\n              },{\n                description : <span>Reading Error at position 123 in pool <strong>HONK1</strong></span>\n              , status      : \"warning\"\n              , details     : \"Error code #1234 Details about this error\"\n              },{\n                description : <span>Reading Error at position 123 in pool <strong>HONK1</strong></span>\n              , status      : \"warning\"\n              , details     : \"Error code #1234 Details about this error\"\n              }\n            ]\n          , events: [\n              {\n                description : <span>User <strong>Jakub Klama</strong> logged in as <strong>administrator</strong></span>\n              , status      : \"info\"\n              , details     : \"Nov 14 11:20am\"\n              }\n            ]\n          , actions: [\n              {\n                description : <span>Running <strong>SCRUB</strong> on pool <strong>HONK1</strong></span>\n              , status      : \"in-progress\"\n              , progress    : 60\n              , details     : \"Run by Jakub Klama 11 minutes ago\"\n              },{\n                description : <span>Waiting to run <strong>SCRUB</strong> on pool <strong>KEVIN</strong></span>\n              , status      : \"pending\"\n              , progress    : 0\n              , details     : \"Run by Jakub Klama 3 minutes ago\"\n              , info        : \"Waiting for previous task (Scrub on pool HONK1)\"\n              }\n            ]\n        }\n\n        // TODO: Replace dummy data with Middleware data in a Flux store\n        , log: {\n            alerts  : []\n          , events  : [\n              {\n                description : <span>User <strong>Kevin Bacon</strong> created dataset <strong>KEVIN</strong></span>\n              , status      : \"info\"\n              , details     : \"Nov 14 11:10am\"\n              }\n            ]\n          , actions : []\n        }\n      };\n    }\n\n  , componentDidMount: function () {\n      window.addEventListener( \"click\", this.makeAllInvisible );\n    }\n\n  , componentWillUnmount: function () {\n      window.removeEventListener( \"click\", this.makeAllInvisible );\n    }\n\n  , makeAllInvisible:   function ( event ) { this.setState({ visibleLog: \"\" }); }\n  , makeEventsVisible:  function ( event ) { this.setState({ visibleLog: \"events\" }); }\n  , makeAlertsVisible:  function ( event ) { this.setState({ visibleLog: \"alerts\" }); }\n  , makeActionsVisible: function ( event ) { this.setState({ visibleLog: \"actions\" }); }\n\n  , render: function () {\n    return (\n      <header className=\"notification-bar\">\n        <div className=\"user-info\">\n\n          {/* System Events */}\n          <LogQueue glyph             = \"info-circle\"\n                    className         = \"notification-info\"\n                    requestVisibility = { this.makeEventsVisible }\n                    visible           = { this.state.visibleLog === \"events\" }\n                    active            = { this.state.active.events }\n                    log               = { this.state.log.events } />\n\n          {/* Alert Messages */}\n          <LogQueue glyph             = \"warning\"\n                    className         = \"notification-warning\"\n                    requestVisibility = { this.makeAlertsVisible }\n                    visible           = { this.state.visibleLog === \"alerts\" }\n                    active            = { this.state.active.alerts }\n                    log               = { this.state.log.alerts } />\n\n          {/* System Tasks/Actions */}\n          <LogQueue glyph             = \"list-alt\"\n                    className         = \"notification-default\"\n                    requestVisibility = { this.makeActionsVisible }\n                    visible           = { this.state.visibleLog === \"actions\" }\n                    active            = { this.state.active.actions }\n                    log               = { this.state.log.actions } />\n\n          <Icon glyph = \"user\" icoSize = \"2x\" />\n\n           <TWBS.SplitButton title=\"Kevin Spacey\" pullRight>\n            <TWBS.MenuItem key=\"1\">Camera!</TWBS.MenuItem>\n            <TWBS.MenuItem key=\"2\">Action!</TWBS.MenuItem>\n            <TWBS.MenuItem key=\"3\">Cut!</TWBS.MenuItem>\n            <TWBS.MenuItem divider />\n            <TWBS.MenuItem key=\"4\"\n                           onClick={ MiddlewareClient.logout.bind( MiddlewareClient ) } >Logout</TWBS.MenuItem>\n          </TWBS.SplitButton>\n\n        </div>\n      </header>\n    );\n  }\n});\n\nmodule.exports = NotificationBar;\n"]}