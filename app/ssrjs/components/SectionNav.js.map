{"version":3,"sources":["app/jsx/components/SectionNav.jsx"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;qBAEK,OAAO;;;;8BACR,iBAAiB;;;;2BAEb,cAAc;;AAEnC,IAAM,UAAU,GAAG,mBAAM,WAAW,CAElC;;AAAE,WAAS,EAAE;AACT,SAAK,EAAE,mBAAM,SAAS,CAAC,KAAK;GAC7B;;AAED,gBAAc,EAAE,wBAAW,IAAI,EAAE,KAAK,EAAG;AACvC,QAAI,OAAO,YAAA,CAAC;;AAEZ,QAAK,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,EAAG;AAClC,aAAO,GACL;;;AACE,aAAG,EAAK,KAAK,AAAE;AACf,mBAAS,EAAG,0BAA0B;AACtC,cAAI,EAAG,QAAQ;AACf,cAAI,EAAG,GAAG;QACR,IAAI,CAAC,OAAO;OACZ,CAAA;KACP,MAAM;AACL,aAAO,GACL;qBAtBD,IAAI;;AAuBD,YAAE,EAAK,IAAI,CAAC,KAAK,AAAE;AACnB,aAAG,EAAK,KAAK,AAAE;AACf,mBAAS,EAAG,iBAAiB;AAC7B,yBAAe,EAAG,iBAAiB;AACnC,cAAI,EAAG,QAAQ;AACf,cAAI,EAAG,QAAQ;QACb,IAAI,CAAC,OAAO;OACT,CAAC;KACX;;AAED,WAAO,OAAO,CAAC;GAChB;;AAED,QAAM,EAAE,kBAAY;AAClB,QAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,CAAC;AACxC,QAAK,OAAO,GAAG,CAAC,EAAG;AACjB,aACE;AAAC,oCAAK,IAAI;UAAC,KAAK,MAAA;QACd;AAAC,sCAAK,GAAG;YAAC,SAAS,EAAC,aAAa;UAC/B;AAAC,wCAAK,WAAW;cAAC,MAAM,EAAC,OAAO;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAE,IAAI,CAAC,cAAc,CAAE;WAC5B;SACV;OACD,CACZ;KACH,MAAM;AACL,aAAO,CAAC,IAAI,CACV,oCAAoC,GACpC,OAAO,KAAK,CAAC,GACT,eAAe,GACf,UAAU,CACf,CAAC;AACF,aAAO,IAAI,CAAC;KACb;GACF;CACF,CAEF,CAAC;;qBAEa,UAAU","file":"app/jsx/components/SectionNav.jsx","sourcesContent":["// SECTION NAV\n// ================\n// Component for managing multiple views side by side\n\n\"use strict\";\n\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\n\nimport { Link } from \"react-router\";\n\nconst SectionNav = React.createClass(\n\n  { propTypes: {\n      views: React.PropTypes.array\n    }\n\n  , createNavItems: function ( item, index ) {\n      let navItem;\n\n      if ( item.disabled || !item.route ) {\n        navItem =\n          <a\n            key = { index }\n            className = \"btn btn-default disabled\"\n            role = \"button\"\n            href = \"#\">\n            { item.display }\n          </a>\n      } else {\n        navItem =\n          <Link\n            to = { item.route }\n            key = { index }\n            className = \"btn btn-default\"\n            activeClassName = \"active btn-info\"\n            role = \"button\"\n            type = \"button\">\n            { item.display }\n          </Link>;\n      }\n\n      return navItem;\n    }\n\n  , render: function () {\n      const viewNum = this.props.views.length;\n      if ( viewNum > 1 ) {\n        return (\n          <TWBS.Grid fluid>\n            <TWBS.Row className=\"text-center\">\n              <TWBS.ButtonGroup bsSize=\"large\">\n                { this.props.views.map( this.createNavItems ) }\n              </TWBS.ButtonGroup>\n            </TWBS.Row>\n          </TWBS.Grid>\n        );\n      } else {\n        console.warn(\n          \"A SectionNav is being called with \" +\n          viewNum === 1\n            ? \"only one view\"\n            : \"no views\"\n        );\n        return null;\n      }\n    }\n  }\n\n);\n\nexport default SectionNav;\n"]}