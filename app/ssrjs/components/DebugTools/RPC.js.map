{"version":3,"sources":["app/jsx/components/DebugTools/RPC.jsx"],"names":[],"mappings":"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","file":"app/jsx/components/DebugTools/RPC.jsx","sourcesContent":["// RPC Debug Tab\n// =============\n\n\"use strict\";\n\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\nimport _ from \"lodash\";\n\n// Middleware\nimport MiddlewareClient from \"../../middleware/MiddlewareClient\";\nimport MiddlewareStore from \"../../stores/MiddlewareStore\";\n\n// Disclosure Triangles\nimport DiscTri from \"../common/DiscTri\";\n\n// Fuzzy TypeAhead\nimport FuzzyTypeAhead from \"../common/FuzzyTypeAhead\";\n\n\nvar RPC = React.createClass(\n\n  { getInitialState: function ( ) {\n      return { services          : MiddlewareStore.getAvailableRPCServices()\n             , methods           : MiddlewareStore.getAvailableRPCMethods()\n             , submissionPending : false\n             , results           : []\n             , methodValue       : \"\"\n             , argsValue         : \"[]\"\n      };\n    }\n\n  , componentDidMount: function ( ) {\n      MiddlewareStore.addChangeListener( this.handleMiddlewareChange );\n      MiddlewareClient.getServices();\n    }\n\n  , componentWillUnmount: function ( ) {\n      MiddlewareStore.removeChangeListener( this.handleMiddlewareChange );\n    }\n\n  , componentDidUpdate: function ( prevProps, prevState ) {\n      if ( ( this.state.submissionPending !== prevState.submissionPending ) &&\n           window ) {\n        let progressNode = React.findDOMNode( this.refs.pendingProgressBar );\n        if ( this.state.submissionPending ) {\n          this.progressDisplayTimeout = setTimeout( function ( ) {\n            Velocity( progressNode\n                    , \"fadeIn\"\n                    , { duration: 500 } );\n          }, 500 );\n        } else {\n          clearTimeout( this.progressDisplayTimeout );\n          Velocity( progressNode\n                  , \"fadeOut\"\n                  , { duration: 250 } );\n        }\n      }\n    }\n\n  , handleMiddlewareChange: function ( namespace ) {\n      var newState = {};\n\n      switch ( namespace ) {\n        case \"services\":\n          var availableServices = MiddlewareStore.getAvailableRPCServices();\n          newState.services = availableServices;\n          if ( availableServices.length ) {\n            availableServices.forEach( function ( service ) {\n              MiddlewareClient.getMethods( service );\n            });\n          }\n          break;\n\n        case \"methods\":\n          newState.methods = MiddlewareStore.getAvailableRPCMethods();\n          break;\n      }\n\n      this.setState( newState );\n    }\n\n  , handleRPCSubmit: function ( value, otherArg ) {\n      let val = value;\n      // The below is hack to avoid the single-click event's call to\n      // handleRPCSubmit to assign a SyntheticMouseEvent to val\n      // Fix if possible.\n      if ( typeof val === \"object\" ) { val = this.state.methodValue }\n      this.setState({ submissionPending: true });\n\n      MiddlewareClient.request( val\n                              , JSON.parse( this.state.argsValue )\n                              , function ( results ) {\n        this.setState({ submissionPending : false\n                      , results           : results\n        });\n      }.bind( this ) );\n\n    }\n\n  , handleMethodClick: function ( rpcString ) {\n      this.setState({ methodValue: rpcString });\n    }\n\n  , handleMethodDbClick: function ( rpcString ) {\n      this.setState({ methodValue: rpcString });\n      this.handleRPCSubmit( rpcString );\n    }\n\n  , optionSelected: function () {\n      this.setState({ methodValue: arguments[0].trim() });\n    }\n\n  , handleArgsInputChange: function ( event ) {\n      this.setState({ argsValue: event.target.value });\n    }\n\n  , handleResultsChange: function ( event ) {\n      this.setState({ results: this.state.results });\n    }\n\n  , createMethodPanel: function ( service, index ) {\n      if ( this.state.methods[ service ] ) {\n        var methods = this.state.methods[ service ].map(\n          function ( method, index ) {\n            var rpcString = service + \".\" + method[\"name\"];\n            return (\n              <a key           = { index }\n                 className     = \"debug-list-item\"\n                 onClick       = { this.handleMethodClick.bind( null\n                                                              , rpcString ) }\n                 onDoubleClick = { this.handleMethodDbClick.bind( null\n                                                                , rpcString )\n                 } >\n                { method[ \"name\" ] }\n              </a>\n            );\n          }.bind( this )\n        );\n\n        return (\n          <DiscTri headerShow={ service }\n                   headerHide={ service }\n                   key={ index }\n                   defaultExpanded={false}>\n            <TWBS.Panel bsStyle=\"info\" key={ index }>\n              { methods }\n            </TWBS.Panel>\n          </DiscTri>\n        );\n\n      } else { return null; }\n    }\n\n  , render: function () {\n      var agmeth = [];\n      _.forEach( this.state.methods, function ( value, key ) {\n        var svc = key;\n        value.map( function ( method, index ) {\n          agmeth.push( svc + \".\" + method[\"name\"] );\n        }\n        );\n      });\n      return (\n        <div className=\"debug-content-flex-wrapper\">\n\n          <TWBS.Col xs={6} className=\"debug-column\" >\n\n            <h5 className=\"debug-heading\">RPC Interface</h5>\n            <TWBS.Row>\n              <TWBS.Col xs={5}>\n                <FuzzyTypeAhead\n                  name=\"RPC Fuzzy Search\"\n                  placeholder=\"Method Name\"\n                  defaultValue={ this.state.methodValue }\n                  options={ agmeth }\n                  className=\"typeahead-list\"\n                  maxVisible={ 7 }\n                  onOptionSelected={ this.optionSelected }\n                  customClasses={{ input     : \"typeahead-text-input\"\n                                 , results   : \"typeahead-list__container\"\n                                 , listItem  : \"typeahead-list__item\"\n                                 , hover     : \"typeahead-active\"\n                  }} />\n              </TWBS.Col>\n              <TWBS.Col xs={5}>\n              <TWBS.Input\n                  type        = \"textarea\"\n                  disabled    = { this.state.submissionPending }\n                  style       = {{ resize: \"vertical\", height: \"34px\" }}\n                  placeholder = \"Arguments (JSON Array)\"\n                  onChange    = { this.handleArgsInputChange }\n                  value       = { this.state.argsValue } />\n              </TWBS.Col>\n              <TWBS.Col xs={2}>\n              <TWBS.Button\n                    bsStyle  = \"primary\"\n                    disabled = { this.state.submissionPending }\n                    onClick  = { this.handleRPCSubmit }\n                    block >\n                  {\"Submit\"}\n                </TWBS.Button>\n              </TWBS.Col>\n\n              <TWBS.Col xs={12}>\n                <TWBS.ProgressBar\n                  active\n                  ref   = \"pendingProgressBar\"\n                  style = {{ display: \"none\"\n                           , opacity: 0\n                           , height: \"10px\"\n                           , margin: \"0 0 6px 0\" }}\n                  now   = { 100 } />\n              </TWBS.Col>\n\n            </TWBS.Row>\n\n            <h5 className=\"debug-heading\">RPC Results</h5>\n            <textarea className = \"form-control debug-column-content debug-monospace-content\"\n                      value     = { JSON.stringify( this.state.results\n                                                  , null, 2 ) }\n                      style     = {{ resize: \"vertical\" }}\n                      onChange  = { this.handleResultsChange } />\n\n          </TWBS.Col>\n\n          <TWBS.Col xs={6} className=\"debug-column\" >\n\n            <h5 className=\"debug-heading\">Available Service Namespaces</h5>\n            <div className=\"debug-column-content well well-sm\">\n              { this.state.services.map( this.createMethodPanel ) }\n            </div>\n\n          </TWBS.Col>\n\n        </div>\n      );\n    }\n\n});\n\nmodule.exports = RPC;\n"]}