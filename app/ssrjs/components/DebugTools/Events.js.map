{"version":3,"sources":["app/jsx/components/DebugTools/Events.jsx"],"names":[],"mappings":"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","file":"app/jsx/components/DebugTools/Events.jsx","sourcesContent":["// Event Log Debug Tab\n// ===================\n\n\"use strict\";\n\nvar componentLongName = \"Debug Tools - Events Tab\";\n\nimport _ from \"lodash\";\nimport React from \"react\";\nimport TWBS from \"react-bootstrap\";\nimport moment from \"moment\";\n\n// Middleware\nimport MiddlewareClient from \"../../middleware/MiddlewareClient\";\nimport MiddlewareStore from \"../../stores/MiddlewareStore\";\n\nvar defaultPredicate = {\n    \"Object\" : \"{ \\\"args\\\": { \\\"args\\\": { \\\"percentage\\\": 100 } } }\"\n  , \"String\" : \"String to search for\"\n  , \"RegExp\" : \"[ \\\"pattern\\\", \\\"flags\\\" ]\"\n};\n\nvar Events = React.createClass({\n\n    getInitialState: function () {\n      return {\n          events           : MiddlewareStore.getEventLog()\n        , timeFormat       : \"absolute\"\n        , predicate        : defaultPredicate[\"Object\"]\n        , predicateType    : \"Object\"\n        , appliedPredicate : null\n      };\n    }\n\n  , componentDidMount: function () {\n      MiddlewareStore.addChangeListener( this.handleMiddlewareChange );\n      MiddlewareClient.subscribe( [\"task.*\",\"system.*\"], componentLongName );\n    }\n\n  , componentWillUnmount: function () {\n      MiddlewareStore.removeChangeListener( this.handleMiddlewareChange );\n      MiddlewareClient.unsubscribe( [\"task.*\",\"system.*\"], componentLongName );\n    }\n\n  , handleMiddlewareChange: function( namespace ) {\n      var newState = {};\n\n      switch ( namespace ) {\n        case \"events\":\n          newState.events = MiddlewareStore.getEventLog();\n          break;\n      }\n\n      this.setState( newState );\n    }\n\n  , handleHumanDateSelect: function( event ) {\n      this.setState({ timeFormat: \"human\" });\n    }\n\n  , handleAbsoluteDateSelect: function( event ) {\n      this.setState({ timeFormat: \"absolute\" });\n    }\n\n  , handlePredicateChange: function( event ) {\n      this.setState({\n          predicate        : event.target.value\n        , appliedPredicate : null\n      });\n    }\n\n  , toggleFilter: function( event ) {\n      this.setState({ appliedPredicate : this.state.appliedPredicate ? null : this.state.predicate });\n  }\n\n  , switchPredicateType: function( predicateType ) {\n      this.setState({\n          appliedPredicate : null\n        , predicateType    : predicateType\n        , predicate        : defaultPredicate[ predicateType ]\n      });\n    }\n\n  , createEventLog: function( event, index ) {\n      var eventObj  = event.args;\n      var timestamp = null;\n\n      if ( this.state.timeFormat === \"human\" ) {\n        timestamp = moment.unix( eventObj.args[\"timestamp\"] ).fromNow();\n      } else {\n        timestamp = moment.unix( eventObj.args[\"timestamp\"] ).format(\"YYYY-MM-DD HH:mm:ss\");\n      }\n\n      return(\n        <div\n          className = \"debug-callout\"\n          key       = { index } >\n          <label>{ eventObj[\"name\"].split(\".\")[0] }</label>\n          <h5>\n            { eventObj[\"name\"] }\n            <small className=\"pull-right\">{ timestamp }</small>\n          </h5>\n          <p>{ eventObj.args.description }</p>\n          <pre className=\"debug-monospace-content\">\n            { JSON.stringify( eventObj.args, null, 2 ) }\n          </pre>\n        </div>\n      );\n    }\n\n  , getPredicateHelp: function( predicateType ) {\n      switch( predicateType ) {\n        case \"Object\":\n          return ( <span>In \"Object\" mode, the \"Filter Predicate\" field uses <code>_.where()</code> from <a href=\"http://devdocs.io/lodash/index#where\" target=\"_blank\">lodash</a>, and will return matching entries that satisfy the object comparison. Remember, most <code>event</code> objects store their data in the following format: <code>{\"{ args: { args: { /* data is here */ } } }\"}</code></span> );\n\n        case \"String\":\n          return ( <span>In \"String\" mode, each event entry is converted by <code>JSON.stringify()</code>, into a string, and then the string entered in the \"Filter Predicate\" field is used as a substring match.</span> );\n\n        case \"RegExp\":\n          return ( <span>In \"String\" mode, each event entry is converted by <code>JSON.stringify()</code>, into a string, and then the array entered in the \"Filter Predicate\" field is used to construct a new <code>RegExp</code> that will test each string. The first value in the array should be your RegExp test string, and the second is (optionally) the flags (<code>g</code>, <code>i</code>, etc.) to use.</span> );\n\n      }\n    }\n\n  , render: function () {\n      var filteredEventLog = [];\n      var logContent       = null;\n\n      if ( this.state.appliedPredicate ) {\n        switch ( this.state.predicateType ) {\n          case \"Object\":\n            try {\n              filteredEventLog = _.where( this.state.events, JSON.parse( this.state.predicate ) );\n            }\n            catch ( error ) {\n              window.alert( \"The entered text could not be parsed as an object\", error );\n            }\n            break;\n\n          case \"String\":\n            try {\n              filteredEventLog = _.filter( this.state.events, function( eventData ) {\n                return JSON.stringify( eventData ).indexOf( this.state.predicate ) !== -1;\n              }.bind(this) );\n            }\n            catch ( error ) {\n              window.alert( error );\n            }\n            break;\n\n          case \"RegExp\":\n            try {\n              var reInput = JSON.parse( this.state.predicate );\n              var re = new RegExp( reInput[0], reInput[1] ? reInput[1] : \"\" );\n              filteredEventLog = _.filter( this.state.events, function( eventData ) {\n                return re.test( JSON.stringify( eventData ) );\n              });\n            }\n            catch ( error ) {\n              window.alert( error );\n            }\n            break;\n        }\n      }\n\n      if ( filteredEventLog.length ) {\n        logContent = filteredEventLog.map( this.createEventLog );\n      } else if ( this.state.events.length ) {\n        logContent = this.state.events.map( this.createEventLog );\n      } else {\n        logContent = <h3 className=\"text-center\">No log content</h3>;\n      }\n\n      return (\n        <div className=\"debug-content-flex-wrapper\">\n\n          <TWBS.Col xs={6} className=\"debug-column\" >\n\n            <h5 className=\"debug-heading\">FreeNAS Event Log</h5>\n            <div className=\"debug-column-content\">\n              { logContent }\n            </div>\n\n          </TWBS.Col>\n\n          <TWBS.Col xs={6} className=\"debug-column\" >\n\n            <h5 className=\"debug-heading\">Options</h5>\n            <div className=\"debug-column-content well well-sm\">\n\n              <form className=\"form-horizontal\">\n\n                <TWBS.Input\n                  type             = \"text\"\n                  value            = { this.state.predicate }\n                  onChange         = { this.handlePredicateChange }\n                  label            = \"Filter Predicate\"\n                  labelClassName   = \"col-xs-2\"\n                  wrapperClassName = \"col-xs-10\"\n                  buttonBefore = {\n                    <TWBS.DropdownButton\n                      bsStyle  = \"default\"\n                      title    = { this.state.predicateType }\n                      >\n                      <TWBS.MenuItem\n                        onClick  = { this.switchPredicateType.bind( null, \"Object\" ) }\n                      >\n                        Object\n                      </TWBS.MenuItem>\n                      <TWBS.MenuItem\n                        onClick  = { this.switchPredicateType.bind( null, \"String\" ) }\n                      >\n                        String\n                      </TWBS.MenuItem>\n                      <TWBS.MenuItem\n                        onClick  = { this.switchPredicateType.bind( null, \"RegExp\" ) }\n                      >\n                        RegExp\n                      </TWBS.MenuItem>\n                    </TWBS.DropdownButton>\n                  }\n                  buttonAfter = {\n                    <TWBS.Button\n                      bsStyle  = { this.state.appliedPredicate ? \"success\" : \"primary\" }\n                      onClick  = { this.toggleFilter }\n                      active   = { !!this.state.appliedPredicate }\n                      >\n                      { this.state.appliedPredicate ? \"Remove Filter\" : \"Apply Filter\" }\n                    </TWBS.Button>\n                  } />\n\n                <TWBS.Col xs={ 10 } xsOffset={ 2 }>\n                  <small>{ this.getPredicateHelp( this.state.predicateType ) }</small>\n                </TWBS.Col>\n\n                <div className=\"form-group\">\n                  <label className=\"control-label col-xs-2\">Time Format</label>\n                  <TWBS.Col xs={ 10 }>\n                    <TWBS.ButtonGroup>\n                      <TWBS.Button\n                          active  = { this.state.timeFormat === \"human\" }\n                          onClick = { this.handleHumanDateSelect }>\n                        {\"Relative Time\"}\n                      </TWBS.Button>\n                      <TWBS.Button\n                          active  = { this.state.timeFormat === \"absolute\" }\n                          onClick = { this.handleAbsoluteDateSelect }>\n                        {\"Absolute Date\"}\n                      </TWBS.Button>\n                    </TWBS.ButtonGroup>\n                  </TWBS.Col>\n                </div>\n\n              </form>\n\n            </div>\n\n          </TWBS.Col>\n\n        </div>\n      );\n    }\n\n});\n\nmodule.exports = Events;\n"]}