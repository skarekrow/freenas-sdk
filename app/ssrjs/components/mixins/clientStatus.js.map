{"version":3,"sources":["app/jsx/components/mixins/clientStatus.jsx"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;kCAEY,2BAA2B;;;;AAEpD,MAAM,CAAC,OAAO,GAAG;;AAEb,iBAAe,EAAE,2BAAY;AACzB,WAAO;AACL,2BAAqB,EAAE,gCAAa,cAAc,EAAE;KACrD,CAAC;GACH;;AAEH,mBAAiB,EAAE,6BAAY;AAC3B,oCAAa,iBAAiB,CAAE,IAAI,CAAC,mBAAmB,CAAE,CAAC;GAC5D;;AAEH,qBAAmB,EAAE,+BAAY;AAC7B,QAAI,CAAC,QAAQ,CAAC,EAAE,qBAAqB,EAAE,gCAAa,cAAc,EAAE,EAAE,CAAC,CAAC;GACzE;;CAEN,CAAC","file":"app/jsx/components/mixins/clientStatus.jsx","sourcesContent":["// CLIENT STATUS MIXIN\n// ===================\n// This mixin contains a set of common helper methods which may be used to\n// reduce the amount of boilerplate code in views which depend on some aspect\n// of the FreeNAS webapp having a certain state - for example, being logged in.\n\n\"use strict\";\n\nimport SessionStore from \"../../stores/SessionStore\";\n\nmodule.exports = {\n\n    getInitialState: function () {\n        return {\n          SESSION_AUTHENTICATED: SessionStore.getLoginStatus()\n        };\n      }\n\n  , componentDidMount: function () {\n        SessionStore.addChangeListener( this.handleSessionChange );\n      }\n\n  , handleSessionChange: function () {\n        this.setState({ SESSION_AUTHENTICATED: SessionStore.getLoginStatus() });\n      }\n\n};\n"]}