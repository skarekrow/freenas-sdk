{"version":3,"sources":["app/jsx/actions/GroupsActionCreators.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;;;;2CAEiB,iCAAiC;;;;yCACnC,+BAA+B;;IAErD,oBAAoB;WAApB,oBAAoB;0BAApB,oBAAoB;;;eAApB,oBAAoB;;WAEC,2BAAE,UAAU,EAAG;AACtC,+CAAkB,sBAAsB,CACtC,EAAE,IAAI,EAAE,2BANL,WAAW,CAMM,mBAAmB;AACrC,kBAAU,EAAE,UAAU;OACvB,CACF,CAAC;KACH;;;WAE6B,gCAAE,MAAM,EAAE,OAAO,EAAG;AAChD,+CAAkB,sBAAsB,CACtC,EAAE,IAAI,EAAE,2BAdL,WAAW,CAcM,yBAAyB;AAC3C,cAAM,EAAE,MAAM;AACd,eAAO,EAAE,OAAO;OACjB,CACF,CAAC;KACH;;;SAjBG,oBAAoB;;;AAmBzB,CAAC;;qBAEa,oBAAoB","file":"app/jsx/actions/GroupsActionCreators.js","sourcesContent":["// Groups Action Creators\n// ==================================\n// Receive and handle events from the middleware, and call the dispatcher.\n\n\"use strict\";\n\nimport FreeNASDispatcher from \"../dispatcher/FreeNASDispatcher\";\nimport { ActionTypes } from \"../constants/FreeNASConstants\";\n\nclass GroupsActionCreators {\n\n  static receiveGroupsList ( groupsList ) {\n    FreeNASDispatcher.handleMiddlewareAction(\n      { type: ActionTypes.RECEIVE_GROUPS_LIST\n      , groupsList: groupsList\n      }\n    );\n  }\n\n  static receiveGroupUpdateTask ( taskID, groupID ) {\n    FreeNASDispatcher.handleMiddlewareAction(\n      { type: ActionTypes.RECEIVE_GROUP_UPDATE_TASK\n      , taskID: taskID\n      , groupID: groupID\n      }\n    );\n  }\n\n};\n\nexport default GroupsActionCreators;\n"]}