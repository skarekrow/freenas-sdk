{"version":3,"sources":["app/jsx/actions/UsersActionCreators.js"],"names":[],"mappings":";;;;AAIA,YAAY,CAAC;;;;;;;;;;;;2CAEiB,iCAAiC;;;;yCACnC,+BAA+B;;IAErD,mBAAmB;WAAnB,mBAAmB;0BAAnB,mBAAmB;;;eAAnB,mBAAmB;;WAEC,0BAAE,QAAQ,EAAG;AACnC,+CAAkB,sBAAsB,CACtC,EAAE,IAAI,EAAE,2BANL,WAAW,CAMM,iBAAiB;AACnC,gBAAQ,EAAE,QAAQ;OACnB,CACF,CAAC;KACH;;;WAE4B,+BAAE,MAAM,EAAE,MAAM,EAAG;AAC9C,+CAAkB,kBAAkB,CAClC,EAAE,IAAI,EAAE,2BAdL,WAAW,CAcM,wBAAwB;AAC1C,cAAM,EAAE,MAAM;AACd,cAAM,EAAE,MAAM;OACf,CACF,CAAC;KACH;;;SAjBG,mBAAmB;;;AAmBxB,CAAC;;qBAEa,mBAAmB","file":"app/jsx/actions/UsersActionCreators.js","sourcesContent":["// Users Action Creators\n// ==================================\n// Receive and handle events from the middleware, and call the dispatcher.\n\n\"use strict\";\n\nimport FreeNASDispatcher from \"../dispatcher/FreeNASDispatcher\";\nimport { ActionTypes } from \"../constants/FreeNASConstants\";\n\nclass UsersActionCreators {\n\n  static receiveUsersList ( rawUsers ) {\n    FreeNASDispatcher.handleMiddlewareAction(\n      { type: ActionTypes.RECEIVE_RAW_USERS\n      , rawUsers: rawUsers\n      }\n    );\n  }\n\n  static receiveUserUpdateTask ( taskID, userID ) {\n    FreeNASDispatcher.handleClientAction(\n      { type: ActionTypes.RECEIVE_USER_UPDATE_TASK\n      , taskID: taskID\n      , userID: userID\n      }\n    );\n  }\n\n};\n\nexport default UsersActionCreators;\n"]}