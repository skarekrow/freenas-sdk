{"version":3,"sources":["app/jsx/stores/DisksStore.js"],"names":[],"mappings":";;;;;;AAMA,YAAY,CAAC;;;;;;;;;;;;;;;;sBAEC,QAAQ;;;;2CAEQ,iCAAiC;;;;yCACnC,+BAA+B;;wBACrC,YAAY;;;;yCAEN,+BAA+B;;;;AAE3D,IAAI,KAAK,GAAG,EAAE,CAAC;;IAET,UAAU;AAEF,WAFR,UAAU,GAEC;0BAFX,UAAU;;AAGZ,+BAHE,UAAU,6CAGJ;;AAER,QAAI,CAAC,aAAa,GAAG,yCAAkB,QAAQ,CAC7C,aAAa,CAAC,IAAI,CAAE,IAAI,CAAE,CAC3B,CAAC;GACH;;YARG,UAAU;;eAAV,UAAU;;WAUF,uBAAG;AACb,aAAO,KAAK,CAAC;KACd;;;SAZG,UAAU;;;AAcf,CAAC;;AAEF,SAAS,aAAa,CAAG,OAAO,EAAG;AACjC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;AAE9B,UAAS,MAAM,CAAC,IAAI;;AAElB,SAAK,2BA5BA,WAAW,CA4BC,sBAAsB;AACrC,YAAM,CAAC,aAAa,CAAC,OAAO,CAAE,UAAA,IAAI;eAAI,KAAK,CAAE,IAAI,CAAC,MAAM,CAAE,GAAG,IAAI;OAAA,CAAE,CAAC;AACpE,YAAM;;AAAA,AAER,SAAK,2BAhCA,WAAW,CAgCC,gBAAgB;;AAE/B,YAAM;AAAA,GACT;CACF;;qBAEc,IAAI,UAAU,EAAE","file":"app/jsx/stores/DisksStore.js","sourcesContent":["// DISKS STORE\n// ===========\n// Store information about the physical storage devices connected to the FreeNAS\n// server, their S.M.A.R.T. status (if available), but not the activity level or\n// other highly specific information about the individual components.\n\n\"use strict\";\n\nimport _ from \"lodash\";\n\nimport FreeNASDispatcher from \"../dispatcher/FreeNASDispatcher\";\nimport { ActionTypes } from \"../constants/FreeNASConstants\";\nimport FluxStore from \"./FluxBase\";\n\nimport DisksMiddleware from \"../middleware/DisksMiddleware\";\n\nlet disks = {};\n\nclass DisksStore extends FluxStore {\n\n  constructor () {\n    super();\n\n    this.dispatchToken = FreeNASDispatcher.register(\n      handlePayload.bind( this )\n    );\n  }\n\n  getAllDisks () {\n    return disks;\n  }\n\n};\n\nfunction handlePayload ( payload ) {\n  const ACTION = payload.action;\n\n  switch ( ACTION.type ) {\n\n    case ActionTypes.RECEIVE_DISKS_OVERVIEW:\n      ACTION.disksOverview.forEach( disk => disks[ disk.serial ] = disk );\n      break;\n\n    case ActionTypes.MIDDLEWARE_EVENT:\n      // TODO: There is currently no correct thing to subscribe to\n      break;\n  }\n}\n\nexport default new DisksStore();\n"]}