{"version":3,"sources":["app/jsx/middleware/DisksMiddleware.js"],"names":[],"mappings":";;;AAGA,YAAY,CAAC;;;;;;;;;;;;;;sBAEC,QAAQ;;;;gCAEP,oBAAoB;;;;kCACV,sBAAsB;;;;0CAE/B,gCAAgC;;;;IAE1C,eAAe;WAAf,eAAe;0BAAf,eAAe;;;;;;;YAAf,eAAe;;eAAf,eAAe;;WAEF,mBAAE,WAAW,EAAG;AAC/B,oCAAG,SAAS,CAAE,CAAE,iCAAiC,CAAE,EAAE,WAAW,CAAE,CAAC;KACpE;;;WAEkB,qBAAE,WAAW,EAAG;AACjC,oCAAG,WAAW,CAAE,CAAE,iCAAiC,CAAE,EAAE,WAAW,CAAE,CAAC;KACtE;;;WAE2B,gCAAG;AAC7B,oCAAG,OAAO,CAAE,aAAa,EACb,EAAE,EACF,SAAS,oBAAoB,CAAG,gBAAgB,EAAG;AACjD,gDAAI,oBAAoB,CAAE,gBAAgB,CAAE,CAAC;OAC9C,CACF,CAAC;KACb;;;WAEyB,4BAAE,QAAQ,EAAG;AACrC,UAAK,oBAAE,QAAQ,CAAE,QAAQ,CAAE,EAAG;AAC5B,sCAAG,OAAO,CAAE,uBAAuB,EACvB,CAAE,QAAQ,CAAE,EACZ,SAAS,kBAAkB,CAAG,cAAc,EAAG;AAC7C,kDAAI,kBAAkB,CAAE,cAAc,CAAE,CAAC;SAC1C,CACF,CAAC;OACb,MAAM;AACL,cAAM,IAAI,KAAK,CAAE,sDAAsD,GACtD,8CAA8C,CAAE,CAAC;AAClE,eAAO;OACR;KACF;;;SAhCG,eAAe;;;AAkCpB,CAAC;;qBAEa,eAAe","file":"app/jsx/middleware/DisksMiddleware.js","sourcesContent":["// Disks Middleware\n// ================\n\n\"use strict\";\n\nimport _ from \"lodash\";\n\nimport MC from \"./MiddlewareClient\";\nimport AbstractBase from \"./MiddlewareAbstract\";\n\nimport DAC from \"../actions/DisksActionCreators\";\n\nclass DisksMiddleware extends AbstractBase {\n\n  static subscribe ( componentID ) {\n    MC.subscribe( [ \"entity-subscriber.disks.changed\" ], componentID );\n  }\n\n  static unsubscribe ( componentID ) {\n    MC.unsubscribe( [ \"entity-subscriber.disks.changed\" ], componentID );\n  }\n\n  static requestDisksOverview () {\n    MC.request( \"disks.query\"\n              , []\n              , function resolveDisksOverview ( rawDisksOverview ) {\n                  DAC.receiveDisksOverview( rawDisksOverview );\n                }\n              );\n  }\n\n  static requestDiskDetails ( diskPath ) {\n    if ( _.isString( diskPath ) ) {\n      MC.request( \"disks.get_disk_config\"\n                , [ diskPath ]\n                , function resolveDiskDetails ( rawDiskDetails ) {\n                    DAC.receiveDiskDetails( rawDiskDetails );\n                  }\n                );\n    } else {\n      throw new Error( \"The argument for DisksMiddleware.requestDiskDetails \"\n                     + \"must be a string representing a disk's path.\" );\n      return;\n    }\n  }\n\n};\n\nexport default DisksMiddleware;\n"]}